//import {xWords} from './xWords';

//TODO: generate from API instead of hard-coded list
// A javascript-enhanced crossword puzzle [c] Jesse Weisbeck, MIT/GPL 
(function($) {
	$(function() {
		// provide crossword entries in an array of objects like the following example
		// Position refers to the numerical order of an entry. Each position can have 
		// two entries: an across entry and a down entry
		var puzzleData = []

		// Step 1: get word bank from API
		var wordBank = [
			"Cow",
			"Rabbit",
			"Ducks",
			"Shrimp",
			"Pig",
			"Goat",
			"Crab",
			"Deer",
			"Bee",
			"Sheep",
			"Fish",
			"Turkey",
			"Dove",
			"Chicken",
			"Horse",
			"Dog",
			"Puppy",
			"Turtle",
			"Rabbit",
			"Parrot",
			"Cat",
			"Kitten",
			"Goldfish",
			"Mouse",
			"Hamster",
			"Crow",
			"Peacock",
			"Sparrow",
			"Goose",
			"Stork",
			"Pigeon",
			"Turkey",
			"Hawk",
			"eagle",
			"Raven",
			"Parrot",
			"Flamingo",
			"Seagull",
			"Ostrich",
			"Swallow",
			"Penguin",
			"Robin",
			"Swan",
			"Woodpecker",
			"Giraffe",
			"Woodpecker",
			"Camel",
			"Starfish",
			"Koala",
			"Alligator",
			"Owl",
			"Tiger",
			"Bear",
			"Blue whale",
			"Coyote",
			"Chimpanzee",
			"Raccoon",
			"Lion",
			"Arctic wolf",
			"Crocodile",
			"Dolphin",
			"Elephant",
			"Squirrel",
			"Snake",
			"Kangaroo",
			"Hippopotamus",
			"Elk",
			"Fox",
			"Gorilla",
			"Bat",
			"Hare",
			"Toad",
			"Frog",
			"Deer",
			"Rat",
			"Badger",
			"Lizard",
			"Mole",
			"Hedgehog",
			"Otter",
			"Reindeer"
		];
		wordBank = wordBank.map(word => word.replace(/\s/g,'').toLowerCase()); // remove spaces and normalize casing
		
		var VERTICAL_BOXES = 16;
		var HORIZONTAL_BOXES = 12;

		// Step 2: use xWord to generate a layout
		var {words, grid} = xWords.Create(
			VERTICAL_BOXES,
			HORIZONTAL_BOXES,
			wordBank);
		console.log(grid);
		// Step 3: transform the layout generated by xWord into the appropriate format
		var puzzleData = words.map(word => {
			return {
				answer: word.word,
				clue: word.clue,
				orientation: word.chosenPosition.direction == 1 ? 'across' : 'down',
				startx: word.chosenPosition.x + 1,
				starty: word.chosenPosition.y + 1
			}
		})
		var positionValue = 1;
		// Starting at the top left, number the words starting in each square in sequence.
		// If two words start in the same square (across and down), they share a number.
		for(var i = 1; i <= VERTICAL_BOXES; i++) {
			for(var j = 1; j <= HORIZONTAL_BOXES; j++) {
				var wordsStartingHere = puzzleData.filter(word => word.startx === j && word.starty === i);
				if (wordsStartingHere.length) {
					wordsStartingHere.forEach(word => {
						word.position = positionValue;
						//console.log(`${i}, ${j}: ${positionValue}: ${word.answer}`);
					});
					positionValue++;
				}
			}
		}
		console.log('words:');
		console.log(words);
		console.log('puzzleData:');
		console.log(puzzleData);
	
		$('#puzzle-wrapper').crossword(puzzleData);
		
	})
	
})(jQuery)
